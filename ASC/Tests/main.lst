     1                                  
     2                                  ;  the program calculates and displays the factorial of a number
     3                                  ;  the procedure factorial is defined in the file factorial.asm
     4                                  bits 32
     5                                  global start
     6                                  
     7                                  import printf msvcrt.dll
     8                                  import exit msvcrt.dll
     9                                  extern printf, exit
    10                                  
    11                                  ; the code from factorial.asm will be inserted here
    12                                  %include "factorial.asm"
     1                              <1> ; we need to avoid multiple inclusion of this file
     2                              <1> %ifndef _FACTORIAL_ASM_ ; if _FACTORIAL_ASM_ is not defined
     3                              <1> %define _FACTORIAL_ASM_ ; then we define it
     4                              <1> 
     5                              <1> ; procedure definition
     6                              <1> factorial:                  ; int _stdcall factorial(int n)
     7 00000000 B801000000          <1> 	mov eax, 1
     8 00000005 8B4C2404            <1> 	mov ecx, [esp + 4]  ; read the parameter from the stack
     9                              <1> 
    10                              <1> 	repeat: 
    11 00000009 F7E1                <1> 		mul ecx
    12 0000000B E2FC                <1> 	loop repeat         ; the case ecx = 0 is not considered
    13                              <1> 
    14 0000000D C20400              <1> 	ret 4
    15                              <1> %endif
    13                                  
    14                                  segment data use32 class=data
    15 00000010 666163746F7269616C-     	format_string db "factorial=%d", 10, 13, 0
    15 00000019 3D25640A0D00       
    16                                  
    17                                  segment code use32 class=code
    18                                  start:
    19 00000000 6A05                    	push dword 5
    20 00000002 E8(00000000)            	call factorial
    21                                  
    22 00000007 50                      	push eax
    23 00000008 68[10000000]            	push format_string
    24 0000000D FF15[00000000]          	call [printf]
    25 00000013 83C408                  	add esp, 4*2
    26                                  
    27 00000016 6A00                    	push 0
    28 00000018 FF15[00000000]          	call [exit]
