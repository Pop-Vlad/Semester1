     1                                  ; a - byte, b - word, c - double word, d - qword - Unsigned representation
     2                                  ; (c-b+a)-(d+a)
     3                                  
     4                                  bits 32
     5                                  
     6                                  global start
     7                                  
     8                                  extern exit
     9                                  import exit msvcrt.dll
    10                                  
    11                                  segment data use32 class=data
    12 00000000 0A                          a db 10
    13 00000001 3200                        b dw 50
    14 00000003 D4000000                    c dd 212
    15 00000007 2E00000000000000            d dq 46
    16                                      
    17                                      
    18                                  segment code use32 class=code
    19                                      start:
    20                                          
    21 00000000 31C0                            xor eax, eax  ; eax = 0
    22 00000002 31DB                            xor ebx, ebx  ; ebx = 0
    23 00000004 31C9                            xor ecx, ecx  ; ecx = 0
    24 00000006 31D2                            xor edx, edx  ; edx = 0
    25                                          
    26 00000008 A1[03000000]                    mov eax, [c]  ; eax = c
    27 0000000D 668B1D[01000000]                mov bx, [b]   ; bx = b
    28 00000014 29D8                            sub eax, ebx  ; eax = c - b
    29                                          
    30 00000016 8A15[00000000]                  mov dl, [a]   ; dl = a
    31 0000001C 01D0                            add eax, edx  ; eax = c - b + a
    32 0000001E 89C3                            mov ebx, eax  ; ebx = c - b + a
    33                                          
    34 00000020 A1[07000000]                    mov eax, [d]
    35 00000025 8B15[09000000]                  mov edx, [d+2]; edx:eax = d
    36 0000002B 8A0D[00000000]                  mov cl, [a]   ; cl = a
    37 00000031 01C8                            add eax, ecx
    38 00000033 83D200                          adc edx, 0    ; edx:eax = d + a
    39                                          
    40 00000036 31C9                            xor ecx, ecx  ; ecx = 0
    41 00000038 29C3                            sub ebx, eax
    42 0000003A 19D1                            sbb ecx, edx  ; ecx:ebx = (c - b + a) - (d + a)
    43                                          
    44 0000003C 6A00                            push    dword 0
    45 0000003E FF15[00000000]                  call    [exit]
