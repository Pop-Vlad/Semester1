     1                                  
     2                                  ; Read numbers (in base 10) in a loop until the digit '0' is read from the keyboard. Determine and display the biggest number from those that have been read.
     3                                  
     4                                  bits 32
     5                                  
     6                                  global start
     7                                  
     8                                  extern exit, scanf, printf
     9                                  import exit msvcrt.dll
    10                                  import scanf msvcrt.dll
    11                                  import printf msvcrt.dll
    12                                  
    13                                  segment data use32 class = data
    14                                      
    15 00000000 00000000                    current_number dd 0  ; current_number = 0
    16 00000004 00000000                    biggest_number dd 0  ; biggest_number = 0
    17 00000008 256400                      format db "%d", 0    ; format = decimal
    18                                  
    19                                  segment code use32 class = code
    20                                      
    21                                      start:
    22                                      
    23                                          ; ---------- Read a number from the keyboard ----------
    24                                          read:
    25 00000000 68[00000000]                        push dword current_number  ; push addres of current_number
    26 00000005 68[08000000]                        push dword format          ; push format = decimal
    27 0000000A FF15[00000000]                      call [scanf]               ; current_number = keyboard input
    28 00000010 83C408                              add esp, 4*2               ; clean stack
    29                                          
    30                                          ; ---------- Check if number is 0, if true go to displaing the biggest number ----------
    31                                          check_if_0:
    32 00000013 833D[00000000]00                    cmp dword [current_number], 0  ;
    33 0000001A 7414                                je display                     ; if current_number == 0, go to displaing the biggest number
    34                                          
    35                                          ; ---------- Obtain the biggest number ----------
    36                                          obtain_biggest_nr:
    37 0000001C A1[00000000]                        mov eax, [current_number]  ; eax = current_number
    38 00000021 3B05[04000000]                      cmp eax, [biggest_number]  ;
    39 00000027 7605                                jbe skip                   ; if eax <= biggest_number skip the next instruction
    40 00000029 A3[04000000]                        mov [biggest_number], eax  ; biggest_number = eax
    41                                              skip:
    42                                      
    43 0000002E EBD0                            jmp start ; repeat all of the instructions above until 0 is given as input
    44                                      
    45                                          ; ---------- Show the biggest number on screen ----------
    46                                          display:
    47 00000030 FF35[04000000]                      push dword [biggest_number]  ; push biggest_number
    48 00000036 68[08000000]                        push dword format            ; push format = decimal
    49 0000003B FF15[00000000]                      call [printf]                ; print biggest_number
    50 00000041 83C408                              add esp, 4*2                 ; clean stack
    51                                      
    52 00000044 6A00                        push dword 0
    53 00000046 FF15[00000000]              call [exit]
