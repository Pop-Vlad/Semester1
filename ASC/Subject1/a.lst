     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit, printf
     6                                  import exit msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  
     9                                  %include "b.asm"
     1                              <1> 
     2                              <1> %ifndef _B_ASM_
     3                              <1> %define _B_ASM_
     4                              <1> 
     5                              <1> analyse_bytes:
     6 00000000 FC                  <1>     cld
     7 00000001 BA00000000          <1>     mov edx, 0
     8 00000006 8B74240C            <1>     mov esi, [esp + 4*3]
     9 0000000A 8B7C2408            <1>     mov edi, [esp + 4*2]
    10                              <1>     begin:
    11 0000000E AD                  <1>         lodsd
    12 0000000F 83F800              <1>         cmp eax, 0
    13 00000012 742C                <1>         je finish
    14 00000014 88C3                <1>         mov bl, al
    15 00000016 B734                <1>         mov bh, "4"
    16                              <1>         
    17 00000018 C1E808              <1>         shr eax, 8
    18 0000001B 38D8                <1>         cmp al, bl
    19 0000001D 7204                <1>         jb skip1
    20 0000001F 88C3                <1>             mov bl, al
    21 00000021 B733                <1>             mov bh, "3"
    22                              <1>         skip1:
    23 00000023 C1E808              <1>         shr eax, 8
    24 00000026 38D8                <1>         cmp al, bl
    25 00000028 7204                <1>         jb skip2
    26 0000002A 88C3                <1>             mov bl, al
    27 0000002C B732                <1>             mov bh, "2"
    28                              <1>         skip2:
    29 0000002E C1E808              <1>         shr eax, 8
    30 00000031 38D8                <1>         cmp al, bl
    31 00000033 7204                <1>         jb skip3
    32 00000035 88C3                <1>             mov bl, al
    33 00000037 B731                <1>             mov bh, "1"
    34                              <1>         skip3:
    35 00000039 88F8                <1>         mov al, bh
    36 0000003B AA                  <1>         stosb
    37 0000003C 00DA                <1>         add dl, bl
    38 0000003E EBCE                <1>         jmp begin
    39                              <1>     finish:
    40 00000040 88542404            <1>     mov [esp + 4], dl
    41 00000044 C20C00              <1>     ret 12
    42                              <1> 
    43                              <1> %endif
    10                                  
    11                                  segment data use32 class=data
    12 00000047 78A63412785634127D-         sir dd 1234A678h, 12345678h, 1AC3B47Dh, 0FEDC9876h, 0
    12 00000050 B4C31A7698DCFE0000-
    12 00000059 0000               
    13 0000005B <res 00000064>              ranks resb 100
    14 000000BF 00000000                    sum dd 0
    15 000000C3 5468652072616E6B73-         ranks_format db "The ranks of the bytes: %s", 10, 0
    15 000000CC 206F66207468652062-
    15 000000D5 797465733A2025730A-
    15 000000DE 00                 
    16 000000DF 5468652073756D206F-         sum_format db "The sum of the bytes: %i", 10, 0
    16 000000E8 662074686520627974-
    16 000000F1 65733A2025690A00   
    17                                      
    18                                      
    19                                  segment code use32 class=code
    20                                      start:
    21                                          
    22                                          ; call analyse_bytes
    23 00000000 68[47000000]                    push dword sir
    24 00000005 68[5B000000]                    push dword ranks
    25 0000000A 68[BF000000]                    push dword sum
    26 0000000F E8(00000000)                    call analyse_bytes
    27 00000014 8915[BF000000]                  mov [sum], edx
    28                                          
    29                                          ; print the ranks
    30 0000001A 68[5B000000]                    push dword ranks
    31 0000001F 68[C3000000]                    push dword ranks_format
    32 00000024 FF15[00000000]                  call [printf]
    33 0000002A 83C408                          add esp, 4*2
    34                                          
    35                                          ; print the sum
    36 0000002D FF35[BF000000]                  push dword [sum]
    37 00000033 68[DF000000]                    push dword sum_format
    38 00000038 FF15[00000000]                  call [printf]
    39 0000003E 83C408                          add esp, 4*2
    40                                          
    41 00000041 6A00                            push    dword 0
    42 00000043 FF15[00000000]                  call    [exit]
